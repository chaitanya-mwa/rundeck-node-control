<joblist>
  <job>
    <id>3de99492-cf8b-47d9-9cfe-4b344dfa949d</id>
    <loglevel>INFO</loglevel>
    <sequence keepgoing='true' strategy='node-first'>
      <command>
        <scriptargs>add /var/rundeck/projects</scriptargs>
        <script><![CDATA[#!/bin/bash

STATE_OK=0
STATE_NODE_NOT_ADDED=2
STATE_RESOURCE_FILE_NOT_FOUND=4


echo "Project: $RD_OPTION_1_PROJECT"
echo "Node: $RD_OPTION_2_NODE"
echo "Hostname: $RD_OPTION_3_HOSTNAME"
echo "Description: $RD_OPTION_DESCRIPTION"
echo "OS Arch: $RD_OPTION_OSARCH"
echo "OS Faily: $RD_OPTION_OSFAMILY"
echo "OS Name: $RD_OPTION_OSNAME"
echo "OS Version: $RD_OPTION_OSVERSION"
echo "Resource: $2/$RD_OPTION_1_PROJECT/etc/resource.xml"

`/usr/local/bin/rundeckNodeCtl $1 $2 $RD_OPTION_1_PROJECT $RD_OPTION_2_NODE "$RD_OPTION_DESCRIPTION" $RD_OPTION_3_HOSTNAME "$RD_OPTION_OSARCH" "$RD_OPTION_OSFAMILY" "$RD_OPTION_OSNAME" "$RD_OPTION_OSVERSION"`
 
EXIT_CODE=$?


if [ $EXIT_CODE -eq $STATE_NODE_NOT_ADDED ]; then
	echo "Error: node already added"
	exit -1
fi


if [ $EXIT_CODE -eq $STATE_RESOURCE_FILE_NOT_FOUND ]; then
	echo "Error: Project file not found"
	exit -1
fi

if [ $EXIT_CODE -eq $STATE_OK ]; then
	echo "Node added sucessfully"
	exit $STATE_OK
fi


]]></script>
      </command>
    </sequence>
    <description>Add a Linux node</description>
    <name>Add Linux node</name>
    <context>
      <project>node_administration</project>
      <options>
        <option name='1_Project' required='true'>
          <description>Project Name</description>
        </option>
        <option name='2_Node' required='true'>
          <description><![CDATA[Node Name:

Example: Node1]]></description>
        </option>
        <option name='3_Hostname' required='true'>
          <description><![CDATA[Hostname or IP address.

Examples:

* node.domain.com
* node.domain.com
* 192.168.1.30
* 192.168.1.30:2222]]></description>
        </option>
        <option name='Description'>
          <description>Node Description (optional)</description>
        </option>
        <option name='osArch'>
          <description>OS Architecture (if known)</description>
        </option>
        <option name='osFamily'>
          <description>OS Family (if known)</description>
        </option>
        <option name='osName' values='Debian,Linux,Ubuntu,Windows'>
          <description>OS Name (if known)</description>
        </option>
        <option name='osVersion'>
          <description>OS Version (if known)</description>
        </option>
      </options>
    </context>
    <uuid>3de99492-cf8b-47d9-9cfe-4b344dfa949d</uuid>
  </job>
</joblist>